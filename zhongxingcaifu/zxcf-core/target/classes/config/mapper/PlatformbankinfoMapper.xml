<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxcf.core.mapper.PlatformbankinfoMapper">
  <resultMap id="BaseResultMap" type="com.zxcf.core.entity.Platformbankinfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="bankName" jdbcType="VARCHAR" property="bankname" />
    <result column="accountName" jdbcType="VARCHAR" property="accountname" />
    <result column="accountNumber" jdbcType="VARCHAR" property="accountnumber" />
    <result column="forkName" jdbcType="VARCHAR" property="forkname" />
    <result column="iconCls" jdbcType="VARCHAR" property="iconcls" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bankName, accountName, accountNumber, forkName, iconCls
  </sql>
  <select id="selectByExample" parameterType="com.zxcf.core.entity.PlatformbankinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from platformbankinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from platformbankinfo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from platformbankinfo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zxcf.core.entity.PlatformbankinfoExample">
    delete from platformbankinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zxcf.core.entity.Platformbankinfo">
    insert into platformbankinfo (id, bankName, accountName, 
      accountNumber, forkName, iconCls
      )
    values (#{id,jdbcType=BIGINT}, #{bankname,jdbcType=VARCHAR}, #{accountname,jdbcType=VARCHAR}, 
      #{accountnumber,jdbcType=VARCHAR}, #{forkname,jdbcType=VARCHAR}, #{iconcls,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zxcf.core.entity.Platformbankinfo">
    insert into platformbankinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bankname != null">
        bankName,
      </if>
      <if test="accountname != null">
        accountName,
      </if>
      <if test="accountnumber != null">
        accountNumber,
      </if>
      <if test="forkname != null">
        forkName,
      </if>
      <if test="iconcls != null">
        iconCls,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bankname != null">
        #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="accountname != null">
        #{accountname,jdbcType=VARCHAR},
      </if>
      <if test="accountnumber != null">
        #{accountnumber,jdbcType=VARCHAR},
      </if>
      <if test="forkname != null">
        #{forkname,jdbcType=VARCHAR},
      </if>
      <if test="iconcls != null">
        #{iconcls,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zxcf.core.entity.PlatformbankinfoExample" resultType="java.lang.Long">
    select count(*) from platformbankinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update platformbankinfo
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bankname != null">
        bankName = #{record.bankname,jdbcType=VARCHAR},
      </if>
      <if test="record.accountname != null">
        accountName = #{record.accountname,jdbcType=VARCHAR},
      </if>
      <if test="record.accountnumber != null">
        accountNumber = #{record.accountnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.forkname != null">
        forkName = #{record.forkname,jdbcType=VARCHAR},
      </if>
      <if test="record.iconcls != null">
        iconCls = #{record.iconcls,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update platformbankinfo
    set id = #{record.id,jdbcType=BIGINT},
      bankName = #{record.bankname,jdbcType=VARCHAR},
      accountName = #{record.accountname,jdbcType=VARCHAR},
      accountNumber = #{record.accountnumber,jdbcType=VARCHAR},
      forkName = #{record.forkname,jdbcType=VARCHAR},
      iconCls = #{record.iconcls,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zxcf.core.entity.Platformbankinfo">
    update platformbankinfo
    <set>
      <if test="bankname != null">
        bankName = #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="accountname != null">
        accountName = #{accountname,jdbcType=VARCHAR},
      </if>
      <if test="accountnumber != null">
        accountNumber = #{accountnumber,jdbcType=VARCHAR},
      </if>
      <if test="forkname != null">
        forkName = #{forkname,jdbcType=VARCHAR},
      </if>
      <if test="iconcls != null">
        iconCls = #{iconcls,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zxcf.core.entity.Platformbankinfo">
    update platformbankinfo
    set bankName = #{bankname,jdbcType=VARCHAR},
      accountName = #{accountname,jdbcType=VARCHAR},
      accountNumber = #{accountnumber,jdbcType=VARCHAR},
      forkName = #{forkname,jdbcType=VARCHAR},
      iconCls = #{iconcls,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>